name: Gemini Code Assistant

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened]

jobs:
  gemini-agent:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@gemini')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@gemini') || contains(github.event.issue.title, '@gemini')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write # Needed for Workload Identity Federation if used

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for better context

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install requests

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run Gemini Agent Client
        id: gemini
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          # If it's a comment, use the comment body as the main prompt
          PROMPT_BODY: ${{ github.event.comment.body || github.event.issue.body }}
          # Our API server URL
          GEMINI_AGENT_API_URL: "https://gemini-agent-api-723511405151.us-central1.run.app"
        run: python .github/scripts/client.py

      - name: Comment with PR creation URL
        if: success() && steps.gemini.outputs.pr_creation_url
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prCreationUrl = process.env.PR_CREATION_URL;
            const issueNumber = context.issue.number;
            github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸŽ‰ Gemini has completed the task! ðŸŽ‰

To create a Pull Request with the changes, please click here:
${prCreationUrl}

Review the changes and merge if everything looks good.`
            });
        env:
          PR_CREATION_URL: ${{ steps.gemini.outputs.pr_creation_url }}
